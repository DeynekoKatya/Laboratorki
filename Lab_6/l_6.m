%%-----------Laba 6------------------
% 
%% % ----- Расчеты -----

% --- Среднее арифметическое отклонение первого уровня

X=[xx1;xx2;xx3;xx4]; % Объединяем данные в одну переменную для удобвства
for i=1:4
yi(i)=sum(X(i,:))/length(X(i,:)); % Тут необходимо по формуле среднего арифм. создать сумму масива и поделить на его длину того же массива. Функции для реализации были рассмотрены в предидущей лаб.
end % Что выполняет запись "(i,:)" в даных переменных?

fprintf('Среднее арифметическое отклонение первого уровня, \n y1=%1.4f ; \n y2=%1.4f ; \n y3=%1.4f ; \n y4=%1.4f .\n',yi)

% -- Заносим результат расчетов среднего отклонения в таблицу
for i=1:4
yi_txt{i}=num2str(yi(i)); % Найдите в help функцию, которая переводит числовой формат данных в текстовый формат. 
end

set(handles.edit21,'String',yi_txt{1}) % Найдите в help функцию, которая занесет наши расчитанные данные в GUI-окно программы
set(handles.edit22,'String',yi_txt{2})
set(handles.edit23,'String',yi_txt{3})
set(handles.edit24,'String',yi_txt{4})
% --% 
% ---
% % --- Среднее арифметическое второго уровня
Y=sum(yi)/length(yi); % Посчитать среднее арфим. по аналогии с кодом, который был выше
fprintf('Среднее арифметическое второго уровня Y=%1.4f\n',Y)
% ---

 
% ----- Дисперсия от случайных возбуждений (Se) -------

yij=[xx1;xx2;xx3;xx4];

for i=1:4
Se(i)=(sum(yij(i,:)-yi(i)).^2)   ; 
end

Se=sum(Se)/(length(yij(:,1))*length(x1)-1); % Для верного создания степени свободы нужно использовать функции длинны массивов с переменными yij и x1
% Перед (Se) нужно использовать функцию суммы
fprintf('Дисперсия от случайных возбуждений, Se=%1.4f\n',Se)
% ---------
% -----  Дисперсия от исследуемого фактора (Si)  ------
Si=(sum(yi-Y).^2)/(length(yi)-1); 

fprintf('Дисперсия от исследуемого фактора, Si=%1.4f\n',Si)
%------
% ----------   Общая дисперсия (Sy) ------------
for i=1:4
Sy(i)=(sum((yij(i,:)-Y).^2)); 

end
Sy=sum(Sy)/((length(yij(:,1))*length(x1))-1);% Для верного создания степени свободы нужно использовать функции длинны массивов с переменными yij и x1
% Перед (Sy) нужно использовать функцию суммы
fprintf('Общая дисперсия, Sy=%1.4f\n',Sy)

%-----------
% 
% ----- Критерий Фишера ---------
F=Si/Se; % Расчитайте коэфициент Фишера с помощью квадратов дисперсий, расчитаных выше
fprintf('Расчитаный критерий Фишера, F=%1.4f\n',F)

fad=length(yi)-1;% Используя нужную переменную создайте расчет степени свободы числителя (!) для Коэф. Фишера по формуле представленной в л/р
fy=length(yij(:,1))*(length(x1)-1);% Используя нужную переменную создайте расчет степени свободы знаменателя (!) для Коэф. Фишера по формуле представленной в л/р
fprintf('Степень свободы числителя, fad=%1.4f\n',fad)
fprintf('Степень свободы знаменателя, fy=%1.4f\n',fy)

set(handles.text15,'Visible','off')

if F_tab<=F % Создайте условие сравнения рассчитанного и табличного значения коэф. Фишера соответственно коду выполнения условия, представленного 
    fprintf('Гипотеза верна!\n')
     set  (handles.text15,'String','Гипотеза верна!') % Используя функцию вывода информации в GUI-окно отобразить результат проверки гипотезы
% Как работает данная строка выше?
       
else
    fprintf('Гипотеза НЕ верна!\n')
     set(handles.text15,'String','Гипотеза НЕ верна!') % Используя функцию вывода информации в GUI-окно отобразить результат проверки гипотезы
end
% -------------------------------
