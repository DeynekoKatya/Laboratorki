% ========== Лабораторная работа №6 ========




%% % ----- Расчеты -----

% --- Среднее арифметическое отклонение первого уровня

% Для будущего расчета дисперсий на разных уровнях необходимо посчитать
% среднее арифметическое для каждых из уровней (см. формулы в лабораторной)

X=[x1;x2;x3;x4]; % Объединяем данные в одну переменную для удобвства
for i=1:4
yi(i)=    (X(i,:))/    (X(i,:)); % Тут необходимо по формуле среднего арифм. создать сумму масива и поделить на его длину того же массива. Функции для реализации были рассмотрены в предидущей лаб.
end % Что выполняет запись "(i,:)" в даных переменных?

fprintf('Среднее арифметическое отклонение первого уровня, \n y1=%1.4f ; \n y2=%1.4f ; \n y3=%1.4f ; \n y4=%1.4f .\n',yi)

% -- Заносим результат расчетов среднего отклонения в таблицу
for i=1:4
yi_txt{i}=     (yi(i)); % Найдите в help функцию, которая переводит числовой формат данных в текстовый формат. 
end

    (handles.edit36,'String',yi_txt{1}) % Найдите в help функцию, которая занесет наши расчитанные данные в GUI-окно программы
    (handles.edit37,'String',yi_txt{2})
    (handles.edit38,'String',yi_txt{3})
    (handles.edit39,'String',yi_txt{4})
% --

% ---

% --- Среднее арифметическое второго уровня
Y=    (yi)/    (yi); % Посчитать среднее арфим. по аналогии с кодом, который был выше
fprintf('Среднее арифметическое второго уровня Y=%1.4f\n',Y)
% ---






% ----- Дисперсия от случайных возбуждений (Se) -------

% Зная среднее арифметическое разных уровней мы можем посчитать дисперсию
% разных уровней

yij=[x1;x2;x3;x4];

for i=1:4
Se(i)=   ; % По формуле представленной в л/р, используя переменные найденные выше (yij и yi), создайте формулу для рассчета квадрата отклонений в дисперсии Se

% Внимание! В данном месте расчитывается сумма квадрата отклонения для
% каждой(!) серии исследований. Далее необходимо найти сумму сумм этих 
% квадратов отклонений и поделить на степень свободы. Программа должна 
% автоматично рассчитывать степень свободы для вашего случая! 

% Учтите, что в блоке программы для расчета дисперсий уже рассчитываются
% квадраты дисперсий.
end

Se=    (Se)/(      ); % Для верного создания степени свободы нужно использовать функции длинны массивов с переменными yij и x1
% Перед (Se) нужно использовать функцию суммы
fprintf('Дисперсия от случайных возбуждений, Se=%1.4f\n',Se)
% ---------
% -----  Дисперсия от исследуемого фактора (Si)  ------
Si=(    )/(   ); % Аналогично формуле для дисперсии выше, а так же с помощью формулы представленной в л/р, используя переменные найденные выше (yi и Y), создайте формулу для рассчета дисперсии Si
% Внимание! В данной формуле можно сразу описать операцию деления на
% степень свободы, которая формируется с помощью одной переменной (yi). Для
% понимания почему происходит упрощение формулы смотрите теорию л/р

fprintf('Дисперсия от исследуемого фактора, Si=%1.4f\n',Si)
%------
% ----------   Общая дисперсия (Sy) ------------
for i=1:4
Sy(i)=(sum((yij(i,:)-Y).^2)); % Аналогично формуле для дисперсии Se, а так же с помощью формулы представленной в л/р, используя переменные найденные выше (yij и Y), создайте формулу для рассчета дисперсии Sy

% Внимание! В данном месте расчитывается сумма квадрата отклонения для
% каждой(!) серии исследований. Далее необходимо найти сумму сумм этих 
% квадратов отклонений и поделить на степень свободы. Программа должна 
% автоматично рассчитывать степень свободы для вашего случая! 

end
Sy=   (Sy)/(     );% Для верного создания степени свободы нужно использовать функции длинны массивов с переменными yij и x1
% Перед (Sy) нужно использовать функцию суммы
fprintf('Общая дисперсия, Sy=%1.4f\n',Sy)

%-----------


% ----- Критерий Фишера ---------
F=   ; % Расчитайте коэфициент Фишера с помощью квадратов дисперсий, расчитаных выше
fprintf('Расчитаный критерий Фишера, F=%1.4f\n',F)

fad=   ;% Используя нужную переменную создайте расчет степени свободы числителя (!) для Коэф. Фишера по формуле представленной в л/р
fy=    ;% Используя нужную переменную создайте расчет степени свободы знаменателя (!) для Коэф. Фишера по формуле представленной в л/р
fprintf('Степень свободы числителя, fad=%1.4f\n',fad)
fprintf('Степень свободы знаменателя, fy=%1.4f\n',fy)

if  % Создайте условие сравнения рассчитанного и табличного значения коэф. Фишера соответственно коду выполнения условия, представленного ниже
    fprintf('Гипотеза верна!\n')
       (handles.text14,'String','Гипотеза верна!') % Используя функцию вывода информации в GUI-окно отобразить результат проверки гипотезы
% Как работает данная строка выше?
       
else
    fprintf('Гипотеза НЕ верна!\n')
       (handles.text14,'String','Гипотеза НЕ верна!') % Используя функцию вывода информации в GUI-окно отобразить результат проверки гипотезы
end
% -------------------------------

