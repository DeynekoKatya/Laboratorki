% Deyneko K. 561 group
clc, clear
%% % -----  2.Ввод данных ----------
x1=input('Введите кол-во приборов (от 4 до 10), x1='); % В сообщении используейте фразу: ('Введите кол-во приборов (от 4 до 10), x1=');
for i=1:5 % проверка условия выбора X1, дается пять шансов ввести данные верно
if x1<4 || x1>10 
    x1=input('Введите кол-во приборов (от 4 до 10), x1=') ; % В сообщении используейте фразу:('Введите кол-во приборов (не более 10 !!!), x1=')
else
    if x1>=4 && x1<10  % условия проверки, чтоб кол-во приборов было от 4 до 10
    break 
        end
end

if i==5
         fprintf('Не мучайте компьютер....:) '), return 
end

end

x2=2 ;% В сообщении используейте фразу: ('Введите кол-во наладчиков (не более чем кол-в приборов), x2=');
% 
for i=1:5 % цикл создает условие для повторного ввода данных, если они введены неверно   if x1<4 || x1>10 
if x1<4 || x1>10 
else if x2<=x1
    break
        end
end

if i==5
         fprintf('Не мучайте компьютер....:) '), return
end

end

% (Заполните пропущенные строки самостоятельно!!!)
tn = 1.7;%input ('Середній час на відмову (годин), tn=1,7');
tv = 0.20; %input('Середній час відновлення працездатності(годин), tv=0,20');




% ----- Конец ввода данных -------------


%% % -------  3.Построение графа состояний ----  
% (Студентам нужно будет ознакомится с функцией построения графов, изучив код graph.m файла самостоятельно)

fprintf(' ------------------------------------------------------------------------------------------------------------------------------------------------------------------ \n'); % создает отступ до и после отображения графа в консоле

[Lam_mas,Mu_mas]=graph_my(x1,x2); % Созданная нами функция, которая строит граф состояний. 

fprintf(' ------------------------------------------------------------------------------------------------------------------------------------------------------------------ \n');
% % -------  Построение графа состояний ---- 
% 
% 
% %% % ---- 4.Рассчет параметров ----
% 
% 
Lam=1./tn; % Интенсивность отказов
fprintf('Интенсивность отказов, Lamda=%1.4f \n',Lam);
Mu=1./tv ;% интенсивность возобновления ремонтоспособности
fprintf('Интенсивность возобновления ремонтоспособности, Mu=%1.4f \n',Mu);
q=Lam/Mu;  % Коэффициент загруженности наладчика, численное значение отношения Лямбды и Мю, без уточняющих коэфф.
fprintf('Коэффициент загруженности наладчика, q=%1.4f \n',q);
q_mas=Lam/Mu  % Коэффициенты для qi
disp('Коэффициенты для qi:')
disp(q_mas)

q_i=q_mas.*q  % расчет i-той загруженности наладчика
disp('Коэффициенты загруженности операторов, qi:')
disp(q_i)

% 
% % --- Расчет вероятности работоспособного состояния (Р0)
for i=1:x1
Q_i(i)=prod(q_i(1:i)); % расчет слагаемых для вероятности работоспособности всех приборов (P0) (или: Лямбда i-тое / Мю i-тое)
end
 
P0=1/(1+sum(Q_i));
disp('Вероятность работоспособного состояния, P0:')
disp(P0)

% for i=1:x1
% Q_i(i)=prod(q_i(1:i));  % расчет слагаемых для вероятности работоспособности всех приборов (P0) (или: Лямбда i-тое / Мю i-тое)
% end
% ----
% 
% % --- Расчет Pi ---
% format shortEng
% P_i= ; % Расчет Pi
% disp('Вероятности нахождения системы в разных состояниях, Pi:')
% disp(P_i)
% format short
% % ----
% 
% 
% % --- Расчет средней занятости одного наладчика (k)
% 
% Kp= ;% Расчет коэффиентов при Р
% disp('Коэффиенты при Р для средней занятости наладчика (k):')
% disp(Kp)
% 
% K= ; % Расчет К
% disp('Средняя занятость одного наладчика, k:')
% disp(K)
% % ---
% 
% % --- Рассчет среднего числа неисправных приборов W
% W= sum(fliplr(     ).*     );
% disp('Среднее число неисправных приборов, W:')
% disp(W)
% % --- 